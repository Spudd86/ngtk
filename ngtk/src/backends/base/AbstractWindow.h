#ifndef __Ngtk_Backends_Base_AbstractWindow_h__
#define __Ngtk_Backends_Base_AbstractWindow_h__

#include <string>
#include "AbstractWidget.h"

namespace Ngtk
{
  namespace Backends
  {
    namespace Base
    {

      /* Note that we need a prefix for the enum names for this enum,
       * since IGNORE is actually defined as a windows macro... */
      enum WindowCloseBehaviour
      {
        WCB_IGNORE, /* This window will ignore close events generated by the use
                     * it will respond however to events generated programmaticaly */
        WCB_HIDE,   /* Hide the window, keeping it valid */
        WCB_CLOSE,  /* Close the window, and free any resources allocated to it */
        WCB_QUIT    /* Same as CLOSE, but also Quits the main Ngtk loop and close all
                     * the open Ngtk Widgets */
      };

      class AbstractWindow
      {
      protected:
        WindowCloseBehaviour OnClose;

      public:
        AbstractWindow (std::string title, WindowCloseBehaviour OnClose);
        virtual ~AbstractWindow ();
      };
    }
  }
}

#endif

